// Generated by view binder compiler. Do not edit!
package com.example.angodafake.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.angodafake.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomHotelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView City;

  @NonNull
  public final TextView cmt;

  @NonNull
  public final ImageView fav;

  @NonNull
  public final TextView firstRectangle;

  @NonNull
  public final TextView hotelName;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView point;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView priceNew;

  @NonNull
  public final RelativeLayout priceRoom;

  @NonNull
  public final TextView rateStatus;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final ImageView shareBtn;

  @NonNull
  public final View view;

  private CustomHotelBinding(@NonNull ConstraintLayout rootView, @NonNull TextView City,
      @NonNull TextView cmt, @NonNull ImageView fav, @NonNull TextView firstRectangle,
      @NonNull TextView hotelName, @NonNull ImageView icon, @NonNull ImageView imageView,
      @NonNull TextView point, @NonNull TextView price, @NonNull TextView priceNew,
      @NonNull RelativeLayout priceRoom, @NonNull TextView rateStatus, @NonNull RatingBar ratingBar,
      @NonNull ImageView shareBtn, @NonNull View view) {
    this.rootView = rootView;
    this.City = City;
    this.cmt = cmt;
    this.fav = fav;
    this.firstRectangle = firstRectangle;
    this.hotelName = hotelName;
    this.icon = icon;
    this.imageView = imageView;
    this.point = point;
    this.price = price;
    this.priceNew = priceNew;
    this.priceRoom = priceRoom;
    this.rateStatus = rateStatus;
    this.ratingBar = ratingBar;
    this.shareBtn = shareBtn;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomHotelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomHotelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_hotel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomHotelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.City;
      TextView City = ViewBindings.findChildViewById(rootView, id);
      if (City == null) {
        break missingId;
      }

      id = R.id.cmt;
      TextView cmt = ViewBindings.findChildViewById(rootView, id);
      if (cmt == null) {
        break missingId;
      }

      id = R.id.fav;
      ImageView fav = ViewBindings.findChildViewById(rootView, id);
      if (fav == null) {
        break missingId;
      }

      id = R.id.firstRectangle;
      TextView firstRectangle = ViewBindings.findChildViewById(rootView, id);
      if (firstRectangle == null) {
        break missingId;
      }

      id = R.id.hotelName;
      TextView hotelName = ViewBindings.findChildViewById(rootView, id);
      if (hotelName == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.point;
      TextView point = ViewBindings.findChildViewById(rootView, id);
      if (point == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.priceNew;
      TextView priceNew = ViewBindings.findChildViewById(rootView, id);
      if (priceNew == null) {
        break missingId;
      }

      id = R.id.price_room;
      RelativeLayout priceRoom = ViewBindings.findChildViewById(rootView, id);
      if (priceRoom == null) {
        break missingId;
      }

      id = R.id.rateStatus;
      TextView rateStatus = ViewBindings.findChildViewById(rootView, id);
      if (rateStatus == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.shareBtn;
      ImageView shareBtn = ViewBindings.findChildViewById(rootView, id);
      if (shareBtn == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new CustomHotelBinding((ConstraintLayout) rootView, City, cmt, fav, firstRectangle,
          hotelName, icon, imageView, point, price, priceNew, priceRoom, rateStatus, ratingBar,
          shareBtn, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
